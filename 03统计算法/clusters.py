# -*- coding: utf-8 -*-

# 聚类算法：
# 1、K-均值聚类：
# 2、均值漂移聚类：
# 3、基于密度的聚类方法：
# 4、用高斯混合模型（GMM）的最大期望（EM）聚类：
# 5、聚类层次聚类：
# 6、图团体检测：

# 聚类算法：
# 1、基于划分的聚类方法：
#   1.1、首先挑选几个点作为出事中心点；
#   1.2、然后再根据预定的启发式算法给数据点做迭代重置；
# eg：
#   k-means算法；

# 2、基于层次的聚类方法：
#   2.1、合并的层次聚类：
#      从底层开始聚类，形成上一层次，然后再在上一层次中实现聚类，直到最后root层；
#   2.2、分裂的层次聚类：
#      从顶层开始聚类，形成下一层次，然后再在下一层次中实现聚类，直到叶子层；
# 优：可解释性好；缺：时间复杂度高；
# BIRCH算法；从顶到底；

# 3、基于密度的聚类方法：
#   3.1、确定一个圆圈，两个参数：一个是最大半径；一个是圆圈里最少应容纳的点；
#   3.2、只要邻近区域的密度超过某个阈值，就继续聚类，在一个圈里的就是一个类；

# 1）如果以点P为中心，eps为半径的邻域内的点个数不少于MinPts，则称P为核心点；
# 2）计算P（i）点到其余非P节点的距离，形成一级距离集合，D={d(1),d(2),d(3),d(4),d(5),d(6),d(7)……}
# 3）所有P点到非P点的距离集合规整在一起，形成一个二维的数组，E={e(1),e(2),e(3),e(4),e(5),e(6),e(7)……}
# 4）对集合E进行升序排列，然后画出距离曲线，将急剧变化的位置作为半径eps；
# 5）根据经验计算半径内的点数量
# eg：
#   DBSCAN

# 4、基于网络的聚类方法：
# 1）将数据划分为网格单元；
# 2）将数据对象映射到网格单元中；
# 3）计算每个单元的密度；
# 4）根据预设的值，将相连的高密度单元组成“类”；
# STING算法、WAVE-CLUSTER算法、CLIQUE算法
# 优：速度快；缺：参数敏感、无法处理不规则的数据，维度灾难；

# 5、基于模型的聚类方法：
# 1）为每簇假定一个模型，寻找数据对给定模型的最佳拟合；
# 2）主要是指基于概率模型的方法和基于神经网络的方法；

# eg：主要是指高斯混合模型、SOM

# 6、基于模糊的聚类方法：
# 1）确定目标函数；
# 2）标准模糊相似矩阵，初始化隶属矩阵；
# 3）开始迭代、直到目标函数收敛到极小值；
# 4）根据迭代结果，由最后的隶属矩阵确定数据所属的类；

# 模糊C均值法（FCM）；
#   存在聚类数目C，和参数m；

# 7、其他聚类方法（基于约束、基于粒度、谱聚类、核聚类、量子聚类）：






















































